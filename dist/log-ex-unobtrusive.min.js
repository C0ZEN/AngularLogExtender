/**
 * Log Unobtrusive Extension v0.0.7-sha.6979397
 *
 * Used within AngularJS to enhance functionality within the AngularJS $log service.
 *
 * @original-author  Thomas Burleson
 * @contributor Layton Whiteley
 * @contributor A confused individual <ferronrsmith@gmail.com>
 * @website http://www.theSolutionOptimist.com
 * (c) 2013 https://github.com/lwhiteley/AngularLogExtender
 * License: MIT
 *
 * Modifications made by @contributor Layton Whiteley:
 * - Modified to be a full stand-alone Angular Application for reuse
 * - Has global and feature level activation/disabling for $log
 * - Created and tested with AngularJS v.1.2.3
 */
angular.module("log.ex.uo",[]).provider("logEx",["$provide",function(n){var r=angular.injector(["ng"]),e=r.get("$filter");r.get("$exceptionHandler"),r.get("$http");var t=!1,o=!1,i={interval:3e3,enable:!1,api:"",methods:["error"]},a=!1,u=null,l=navigator.userAgent,g=["log","info","warn","debug","error","getInstance"],s=["chrome","firefox"],c=!0,f=["color","background","font-size","border"],h={log:"color: green;",info:"color: blue",warn:"color: #CC9933;",debug:"color: brown;",error:"color: red;"},d=g,v=function(n){return"string"===L(n)?n.replace(/^\s*/,"").replace(/\s*$/,""):""},L=function(n){return Object.prototype.toString.call(n).replace(/(\[|object|\s|\])/g,"").toLowerCase()},p=function(n){return"boolean"===L(n)},b=function(n){return"string"===L(n)&&""!==v(n)},y=function(n,r){return"string"===L(n)&&"string"===L(r)&&-1!=r.toLowerCase().indexOf(n.toLowerCase())?!0:!1},E=function(n,r){return p(n)&&n&&2==r.length},x=function(n,r,e){var t="string"!==L(n)&&"object"!==L(r),o="string"!==L(n)||"object"!==L(r);return t||o?Array.prototype.slice.call(arguments):(e="regexp"===L(e)?e:/\{([^\{\}]*)\}/g,n.replace(e,function(n,e){var t=e.split("."),o=r;try{for(var i in t)o=o[t[i]]}catch(a){o=n}return"string"==typeof o||"number"==typeof o?o:n}))},A=function(){for(var n=0;s.length>n;n++)if(y(s[n],l))return!0;return!1},P=A(),C=function(n){return 1==n.length&&"string"===L(n[0])},D=function(n){for(var r=0;f.length>r;r++)if(y(f[r],n))return!0;return!1},I=function(n){return"string"===L(n)&&y(":",n)&&v(n).length>6&&D(n)},m=function(n,r,e){e="string"===L(e)?e:"";var t=P&&I(r)&&"string"===L(n),o=t?""+e+n:n;return t?["%c"+o,r]:[o]},w=function(n){var r=" >> ",t="MMM-dd-yyyy-h:mm:ssa",o=e("date")(new Date,t);return""+o+("string"!==L(n)?"":"::"+n)+r},G=function(n){var r="";return r=p(a)&&a||!p(o)||!o||!angular.isFunction(u)?w(n):u(n)};n.decorator("$log",["$delegate",function(n){var r=function(){var n=function(n){return p(n)},r=function(n){return n!==!1},e=function(n,r){return p(n)&&p(r)?r:!1},t=function(n,r,e,t,o){var i=b(t)?t:"this instance";!o&&r&&e?n.log(G()+"[OVERRIDE] LOGGING ENABLED - $log enabled for "+i):o&&r&&!e&&n.log(G()+"[OVERRIDE] LOGGING DISABLED - $log disabled for "+i)},o=function(n){var r={};return angular.isArray(n)&&(r={getInstance:angular.noop},angular.forEach(n,function(n){r[n]=angular.noop})),r},i=function(n,r,e,t){var i={},a=o(r);return angular.forEach(g,function(r){var o;if(angular.isDefined(t)){var u=[];angular.copy(t,u),u.unshift(n[r]),P&&c&&(u[5]=I(u[5])?u[5]:h[r]),o=e.apply(null,u)}else o=n[r];i[r]=angular.isUndefined(a[r])?angular.noop:o}),i},a=function(o){var a=function(n,r,t,o,i,a){var u=function(){var u=o?e(g,t):g,l=Array.prototype.slice.call(arguments);if(u){var s=G(r);if(E(i,l)){var c=x.apply(null,l);c="string"===L(c)?[c]:c,l=c}"string"===L(a)&&C(l)?l=m(l[0],a,s):l.unshift(s),n&&n.apply(null,l)}};return u.logs=[],u},u=i(o,d),l=function(e,o,l,s){p(e)?(o=e,e=null):e="string"===L(e)?v(e):null;var c=n(o);return o=r(o),t(u,c,o,e,g),i(u,d,a,[e,o,c,l,s])},g=!1;return angular.extend(o,i(o,d,a,[null,!1,!1,!1,null])),o.getInstance=l,o.enableLog=function(n){g=n},o.logEnabled=function(){return g},o},u=function(n){return i(n,d)};this.enhanceLogger=a,this.exposeSafeLog=u},e=new r;return e.enhanceLogger(n),n.enableLog(t),n.logEnabled()&&n.log("CONFIG: LOGGING ENABLED GLOBALLY"),e.exposeSafeLog(n)}]);var M=function(n){t=p(n)?n:!1},O=function(n){angular.isArray(n)&&(d=n)},$=function(n){angular.isFunction(n)&&(u=n,o=!0)},j=function(n){c=p(n)&&n?!1:!0},N=function(n,r){"string"===L(n)&&h.hasOwnProperty(n)&&I(r)&&(h[n]=r)},S=function(n){"object"===L(n)&&angular.forEach(n,function(n,r){N(r,n)})},B=function(n){angular.isUndefined(n)?a=!0:p(n)&&(a=n)},R=function(n){angular.isUndefined(n)?i.enable=!0:p(n)&&(i.enable=n)},U=function(n){"array"===L(n)&&(i.methods=n)},F=function(n){"number"===L(n)&&(i.interval=n)},V=function(n){"string"===L(n)&&(i.api=n)};this.$get=function(){return{name:"Log Unobtrusive Extension",version:"0.0.7-sha.6979397",enableLogging:M,restrictLogMethods:O,overrideLogPrefix:$,disableDefaultColors:j,setLogMethodColor:N,overrideLogMethodColors:S,useDefaultLogPrefix:B,enableLogPushService:R,setAllowedLogPushMethods:U,setLogPushApi:V,setLogPushInterval:F}},this.enableLogging=M,this.overrideLogPrefix=$,this.restrictLogMethods=O,this.disableDefaultColors=j,this.setLogMethodColor=N,this.overrideLogMethodColors=S,this.useDefaultLogPrefix=B,this.enableLogPushService=R,this.setAllowedLogPushMethods=U,this.setLogPushApi=V,this.setLogPushInterval=F}]);